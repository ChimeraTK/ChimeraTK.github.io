var searchData=
[
  ['checkthreadsafety',['checkThreadSafety',['../class_chimera_t_k_1_1_unidirectional_process_array.html#a57ccfb0b98026c240acaef4270dfae6f',1,'ChimeraTK::UnidirectionalProcessArray']]],
  ['controlsystempvmanager',['ControlSystemPVManager',['../class_chimera_t_k_1_1_control_system_p_v_manager.html#a1e8b5ec5cb20e7b0435185ebc7b6671a',1,'ChimeraTK::ControlSystemPVManager::ControlSystemPVManager(boost::shared_ptr&lt; PVManager &gt; pvManager)'],['../class_chimera_t_k_1_1_control_system_p_v_manager.html#ae2d5ff4bf9c23dbc64a5cb820a16bafa',1,'ChimeraTK::ControlSystemPVManager::ControlSystemPVManager(const ControlSystemPVManager &amp;)']]],
  ['controlsystemsendnotificationlistenerimpl',['ControlSystemSendNotificationListenerImpl',['../class_chimera_t_k_1_1_p_v_manager_1_1_control_system_send_notification_listener_impl.html#a18b235dd2556828543045c1b371150cd',1,'ChimeraTK::PVManager::ControlSystemSendNotificationListenerImpl']]],
  ['controlsystemsynchronizationutility',['ControlSystemSynchronizationUtility',['../class_chimera_t_k_1_1_control_system_synchronization_utility.html#a17974ef52cb1ba8d37d6bd84bebc14fd',1,'ChimeraTK::ControlSystemSynchronizationUtility::ControlSystemSynchronizationUtility(ControlSystemPVManager::SharedPtr)'],['../class_chimera_t_k_1_1_control_system_synchronization_utility.html#aefc6a226e932a3dd9d6b8257987dab76',1,'ChimeraTK::ControlSystemSynchronizationUtility::ControlSystemSynchronizationUtility(ControlSystemSynchronizationUtility const &amp;)']]],
  ['convertandcopyfromimpl',['convertAndCopyFromImpl',['../class_chimera_t_k_1_1_type_changing_decorator.html#a02c7f929b0b14e05cccf17b4c9163dc5',1,'ChimeraTK::TypeChangingDecorator::convertAndCopyFromImpl()'],['../class_chimera_t_k_1_1_type_changing_string_impl_decorator_3_01_t_00_01std_1_1string_01_4.html#a5cba987bcc76b3b1e2453934b32bb887',1,'ChimeraTK::TypeChangingStringImplDecorator&lt; T, std::string &gt;::convertAndCopyFromImpl()'],['../class_chimera_t_k_1_1_type_changing_range_checking_decorator.html#af360260163fc39f92f672d40aff4cc94',1,'ChimeraTK::TypeChangingRangeCheckingDecorator::convertAndCopyFromImpl()'],['../class_chimera_t_k_1_1_type_changing_range_checking_decorator_3_01_t_00_01std_1_1string_01_4.html#a7374c3d2fdd08a1737add46a14a0d4a1',1,'ChimeraTK::TypeChangingRangeCheckingDecorator&lt; T, std::string &gt;::convertAndCopyFromImpl()'],['../class_chimera_t_k_1_1_type_changing_direct_cast_decorator.html#ad69c9a827e5ed137707522c92772fe9f',1,'ChimeraTK::TypeChangingDirectCastDecorator::convertAndCopyFromImpl()'],['../class_chimera_t_k_1_1_type_changing_direct_cast_decorator_3_01_t_00_01std_1_1string_01_4.html#a4a4165ef8cf7c0c977c91667417fbe70',1,'ChimeraTK::TypeChangingDirectCastDecorator&lt; T, std::string &gt;::convertAndCopyFromImpl()']]],
  ['convertandcopytoimpl',['convertAndCopyToImpl',['../class_chimera_t_k_1_1_type_changing_decorator.html#afdf82ffdf3967df7739c475784ba6a07',1,'ChimeraTK::TypeChangingDecorator::convertAndCopyToImpl()'],['../class_chimera_t_k_1_1_type_changing_string_impl_decorator_3_01_t_00_01std_1_1string_01_4.html#a6d74e7f1b709cd2c7ce45e6052b2cea9',1,'ChimeraTK::TypeChangingStringImplDecorator&lt; T, std::string &gt;::convertAndCopyToImpl()'],['../class_chimera_t_k_1_1_type_changing_range_checking_decorator.html#a678d7f2286d88005d891bae1a88fa116',1,'ChimeraTK::TypeChangingRangeCheckingDecorator::convertAndCopyToImpl()'],['../class_chimera_t_k_1_1_type_changing_range_checking_decorator_3_01_t_00_01std_1_1string_01_4.html#af63ea477eb59807fbee66b2b001648dc',1,'ChimeraTK::TypeChangingRangeCheckingDecorator&lt; T, std::string &gt;::convertAndCopyToImpl()'],['../class_chimera_t_k_1_1_type_changing_direct_cast_decorator.html#a6f86524f5064768f7599029751301e6f',1,'ChimeraTK::TypeChangingDirectCastDecorator::convertAndCopyToImpl()'],['../class_chimera_t_k_1_1_type_changing_direct_cast_decorator_3_01_t_00_01std_1_1string_01_4.html#a0d0a1bd552c822a251a7452911733938',1,'ChimeraTK::TypeChangingDirectCastDecorator&lt; T, std::string &gt;::convertAndCopyToImpl()']]],
  ['createbidirectionalprocessarray',['createBidirectionalProcessArray',['../class_chimera_t_k_1_1_p_v_manager.html#a0b3a4d1a884f7bd2eba012c568416e7a',1,'ChimeraTK::PVManager']]],
  ['createbidirectionalsynchronizedprocessarray',['createBidirectionalSynchronizedProcessArray',['../namespace_chimera_t_k.html#ad4ca1609db9566bab6cfe209670fca1e',1,'ChimeraTK::createBidirectionalSynchronizedProcessArray(std::size_t size, const mtca4u::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, T initialValue=T(), std::size_t numberOfBuffers=3, TimeStampSource::SharedPtr timeStampSource1=TimeStampSource::SharedPtr(), TimeStampSource::SharedPtr timeStampSource2=TimeStampSource::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener1=ProcessVariableListener::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener2=ProcessVariableListener::SharedPtr(), const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../namespace_chimera_t_k.html#aac293b6bd972853f00f16497d2c8bfc3',1,'ChimeraTK::createBidirectionalSynchronizedProcessArray(const std::vector&lt; T &gt; &amp;initialValue, const mtca4u::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, std::size_t numberOfBuffers=3, TimeStampSource::SharedPtr timeStampSource1=TimeStampSource::SharedPtr(), TimeStampSource::SharedPtr timeStampSource2=TimeStampSource::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener1=ProcessVariableListener::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener2=ProcessVariableListener::SharedPtr(), const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]],
  ['createprocessarray',['createProcessArray',['../class_chimera_t_k_1_1_device_p_v_manager.html#af649946669402ad92f21cc169d02ed52',1,'ChimeraTK::DevicePVManager::createProcessArray(SynchronizationDirection synchronizationDirection, const mtca4u::RegisterPath &amp;processVariableName, std::size_t size, const std::string &amp;unit=mtca4u::TransferElement::unitNotSet, const std::string &amp;description=&quot;&quot;, T initialValue=T(), bool maySendDestructively=false, std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../class_chimera_t_k_1_1_device_p_v_manager.html#aec712c3f7c52acc1d65623d3dc07aa88',1,'ChimeraTK::DevicePVManager::createProcessArray(SynchronizationDirection synchronizationDirection, const mtca4u::RegisterPath &amp;processVariableName, const std::vector&lt; T &gt; &amp;initialValue, const std::string &amp;unit=mtca4u::TransferElement::unitNotSet, const std::string &amp;description=&quot;&quot;, bool maySendDestructively=false, std::size_t numberOfBuffers=3, const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]],
  ['createprocessarraycontrolsystemtodevice',['createProcessArrayControlSystemToDevice',['../class_chimera_t_k_1_1_p_v_manager.html#a41c8be57e4ff48c9f594ab8eb43e8745',1,'ChimeraTK::PVManager']]],
  ['createprocessarraydevicetocontrolsystem',['createProcessArrayDeviceToControlSystem',['../class_chimera_t_k_1_1_p_v_manager.html#aa6a929d0bb7ae9e2c54c1bab9f84841b',1,'ChimeraTK::PVManager']]],
  ['createpvmanager',['createPVManager',['../namespace_chimera_t_k.html#a1b53f55bb55bb18e13425b8d79adef97',1,'ChimeraTK']]],
  ['createsynchronizedprocessarray',['createSynchronizedProcessArray',['../namespace_chimera_t_k.html#a181bda8e2be41ee7a6f578572d693703',1,'ChimeraTK::createSynchronizedProcessArray(std::size_t size, const mtca4u::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, T initialValue=T(), std::size_t numberOfBuffers=3, bool maySendDestructively=false, TimeStampSource::SharedPtr timeStampSource=TimeStampSource::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener=ProcessVariableListener::SharedPtr(), const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})'],['../namespace_chimera_t_k.html#ae00ef25c6d6b897fadf8a484fa8e4037',1,'ChimeraTK::createSynchronizedProcessArray(const std::vector&lt; T &gt; &amp;initialValue, const mtca4u::RegisterPath &amp;name=&quot;&quot;, const std::string &amp;unit=&quot;&quot;, const std::string &amp;description=&quot;&quot;, std::size_t numberOfBuffers=3, bool maySendDestructively=false, TimeStampSource::SharedPtr timeStampSource=TimeStampSource::SharedPtr(), ProcessVariableListener::SharedPtr sendNotificationListener=ProcessVariableListener::SharedPtr(), const AccessModeFlags &amp;flags={AccessMode::wait_for_new_data})']]]
];
